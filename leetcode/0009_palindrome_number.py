# 0009_palindrome_number.py
# -----------------------------------------------------
# ✅ 제목: Palindrome Number
# ✅ 문제 설명(요약):
# - 정수 x가 주어질 때, x가 팰린드롬인지 여부를 반환한다.
# - 팰린드롬: 앞으로 읽으나 뒤로 읽으나 동일한 수.
#
# ✅ 입력 형식(요지):
# - x: int
#
# ✅ 규칙 요약:
# 1) 음수는 팰린드롬이 될 수 없음.
# 2) 0으로 끝나는 수(단, 0 자체 제외)는 팰린드롬이 아님.
# 3) 문자열로 변환하지 않고, 정수 연산만으로 판별.
# 4) 절반만 뒤집어서 비교 (짝수/홀수 자릿수 모두 처리 가능).
#
# ✅ 입출력 예시(1개):
# - x = 121 → True
# - x = -121 → False
# - x = 10 → False
#
# ✅ 정답 코드(너의 풀이; 한 줄마다 주석):
class Solution:
    def isPalindrome(self, x: int) -> bool:
        if x < 0 or (x % 10 == 0 and x != 0):   # 음수이거나 0으로 끝나는 양수는 불가능
            return False

        rev = 0                                 # 뒤집힌 절반을 저장할 변수
        while x > rev:                          # 원래 수(x)가 rev보다 클 때만 반복
            rev = rev * 10 + x % 10             # x의 끝자리 추출 후 rev에 추가
            x //= 10                            # x는 끝자리 제거

        # 짝수 길이: x == rev
        # 홀수 길이: x == rev // 10 (가운데 숫자 제거 후 비교)
        return x == rev or x == rev // 10

# -----------------------------------------------------
# 🔍 첫 시도 결과:
# - 문자열 변환 방식 사용 → 문제는 풀렸지만 Follow-up(문자열 사용 금지) 조건 미충족.
#
# 🔧 오답 및 실수(무엇을 틀렸고 어떻게 고쳤는지):
# - (이전) 모든 수를 문자열로 바꿔 뒤집은 후 비교 → 공간 O(n) 사용.
#   → (수정) 정수 연산으로 절반만 뒤집어 비교. 음수/끝자리 0인 케이스는 사전 차단.
#
# 📚 사용된/필수 개념(최소):
# - 수학적 연산(나눗셈, 나머지, 10배 곱셈)으로 뒤집기
# - while 루프 조건(x > rev)을 통한 절반 비교
# - 시간복잡도: O(log₁₀(x)), 공간복잡도: O(1)
