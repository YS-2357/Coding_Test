# 3021_alice_and_bob_playing_flower_game.py
# -----------------------------------------------------
# ✅ 제목: Alice and Bob Playing Flower Game
# ✅ 문제 설명(요약):
# - Alice는 1~n 중 꽃잎 수 하나를 고르고, Bob은 1~m 중 꽃잎 수 하나를 고른다.
# - 두 꽃잎 수의 합이 홀수가 되는 경우의 수를 반환한다.
#
# ✅ 입력 형식(요지):
# - n: int (Alice가 고를 수 있는 꽃의 최대 꽃잎 수)
# - m: int (Bob이 고를 수 있는 꽃의 최대 꽃잎 수)
#
# ✅ 규칙 요약:
# 1) 합이 홀수 → 한쪽은 홀수, 다른 한쪽은 짝수.
# 2) odd_n = (n+1)//2, even_n = n//2
#    odd_m = (m+1)//2, even_m = m//2
# 3) 결과 = odd_n*even_m + even_n*odd_m
#
# ✅ 입출력 예시(1개):
# - n=1, m=5
#   odd_n=1, even_n=0
#   odd_m=3, even_m=2
#   경우의 수 = 1*2 + 0*3 = 2
#   → 정답 = 2
#
# ✅ 정답 코드(너의 풀이; 한 줄마다 주석):
class Solution:
    def flowerGame(self, n: int, m: int) -> int:
        odd_n, even_n = (n+1)//2, n//2          # 1~n에서 홀수, 짝수 개수
        odd_m, even_m = (m+1)//2, m//2          # 1~m에서 홀수, 짝수 개수
        
        return odd_n*even_m + even_n*odd_m      # 합이 홀수가 되는 경우의 수
        # return (m * n) // 2

# -----------------------------------------------------
# 🔍 첫 시도 결과:
# - 일부 케이스에서 잘못된 분기 처리(둘 다 홀수일 때)로 오답 발생.
#
# 🔧 오답 및 실수(무엇을 틀렸고 어떻게 고쳤는지):
# - (이전) n,m 모두 홀수일 때 잘못된 수식 사용 → 경우의 수 누락.
# - (수정) 홀수·짝수 개수를 직접 세어 통일된 공식 적용.
#
# 📚 사용된/필수 개념(최소):
# - 패리티(짝/홀) 성질
# - 경우의 수 곱셈 원리
# - 시간복잡도: O(1), 공간복잡도: O(1)
