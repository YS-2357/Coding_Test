# 3227_vowels_game_in_a_string.py
# -----------------------------------------------------
# ✅ 제목: Vowels Game in a String (LeetCode 3227)
# ✅ 문제 설명(요약):
# - 문자열 s에서 두 플레이어가 번갈아 부분 문자열을 지움.
#   - Alice: 홀수 개 모음(a,e,i,o,u) 포함 부분 문자열만 삭제 가능.
#   - Bob: 짝수 개 모음 포함 부분 문자열만 삭제 가능.
# - 더 이상 삭제 불가한 플레이어가 패배. Alice 선공.
#
# ✅ 입력 형식(요지):
# - 문자열 s (영문 소문자, 길이 1 ≤ |s| ≤ 100)
#
# ✅ 규칙 요약:
# 1) Alice가 먼저 시작.
# 2) 전체 문자열의 모음 개수를 k라 하면:
#    - k == 0 → Alice 즉시 패배.
#    - k > 0 → Alice 언제나 승리 가능.
#
# ✅ 입출력 예시(1개):
# - 입력: s = "leetcoder"
# - 출력: True  (모음이 존재하므로 Alice 승리)

# ✅ 정답 코드(너의 풀이; 한 줄마다 주석):
class Solution:
    def doesAliceWin(self, s: str) -> bool:
        s = s.lower()                # 대문자 방지용 소문자 처리
        vowels = "aeiou"             # 모음 집합

        for ch in s:                 # 문자열 스캔
            if ch in vowels:         # 모음이 하나라도 있으면
                return True          # Alice 승리
        return False                 # 모음이 없으면 Alice 패배 → Bob 승리

# -----------------------------------------------------
# 🔍 첫 시도 결과:
# - 모든 테스트 케이스에서 정답 반환, Accepted.
#
# 🔧 오답 및 실수(무엇을 틀렸고 어떻게 고쳤는지):
# - prefix sum 접근을 고려했지만 불필요. 단순히 모음 존재 여부만 확인하면 충분.
# - 특별한 오답 없음.
#
# 📚 사용된/필수 개념(최소):
# - 게임 이론 불변량: 모음 개수의 유무로 승패가 결정됨.
# - 문자열 순회로 모음 존재 여부 확인.
# - 시간복잡도: O(n), 공간복잡도: O(1).
