# -------------------------------------------------------------
# 📘 백준 15685번: 드래곤 커브
# https://www.acmicpc.net/problem/15685
#
# ✅ 문제 설명:
# - 드래곤 커브는 (x, y)에서 시작해 특정 방향으로 선분을 그리고,
#   각 세대마다 시계방향으로 90도 회전한 커브를 이어붙이며 생성됨.
# - 각 커브는 (x, y, d, g)의 형태로 주어짐:
#   - x, y: 시작 좌표
#   - d: 시작 방향 (0:오른쪽, 1:위, 2:왼쪽, 3:아래)
#   - g: 세대
# - 격자 크기는 0~100까지 존재하며, 모든 커브를 그린 후
#   1x1 정사각형 네 꼭짓점이 모두 커브에 포함된 정사각형 개수를 구함.
#
# ✅ 입력 형식:
# N                       → 드래곤 커브 개수
# x y d g                 → N개의 드래곤 커브 정보
#
# ✅ 출력 형식:
# - 네 꼭짓점이 모두 커브 위에 있는 1x1 정사각형의 개수 출력
#
# ✅ 입력 예제:
# 3
# 3 3 0 1
# 4 2 1 3
# 4 2 2 1
#
# ✅ 출력 예제:
# 4
# -------------------------------------------------------------

import sys
input = sys.stdin.readline

# 101x101 격자 생성 (0부터 100까지 포함)
grid = [[0] * 101 for _ in range(101)]

# 방향: 0=→, 1=↑, 2=←, 3=↓
dx = [1, 0, -1, 0]
dy = [0, -1, 0, 1]

def draw(x, y, d, g):
    # ➤ 0세대 방향을 먼저 리스트에 저장
    directions = [d]

    # ➤ 세대 수만큼 반복하여 방향 리스트 확장
    for _ in range(g):
        # ➤ 현재 방향 리스트를 역순 순회하며, 각 방향을 +1(시계 방향) 후 추가
        for i in range(len(directions) - 1, -1, -1):
            directions.append((directions[i] + 1) % 4)

    # ➤ 시작 좌표 방문 표시
    grid[y][x] = 1

    # ➤ 방향대로 선분을 이동하면서 커브 그리기
    for dir in directions:
        x += dx[dir]
        y += dy[dir]
        if 0 <= x < 101 and 0 <= y < 101:
            grid[y][x] = 1  # 방문 표시

# ➤ 드래곤 커브 입력 및 처리
N = int(input())
for _ in range(N):
    x, y, d, g = map(int, input().split())
    draw(x, y, d, g)

# ➤ 정사각형 체크: 네 꼭짓점이 모두 1인 곳
count = 0
for i in range(100):  # 0~99까지 검사
    for j in range(100):
        if grid[i][j] and grid[i+1][j] and grid[i][j+1] and grid[i+1][j+1]:
            count += 1

# ➤ 결과 출력
print(count)

# -------------------------------------------------------------
# ✅ 백준 제출용 최종 정답 코드 🚀
# - `draw()` 함수에서 방향 리스트를 세대마다 시계방향 회전으로 확장함.
# - 커브는 시작점에서 주어진 방향에 따라 이동하면서 방문 표시.
# - `grid[y][x] = 1` 로 좌표 방문 여부를 기록.
# - 마지막에 모든 1x1 정사각형을 검사하여 네 꼭짓점이 전부 1인 경우만 카운트.
#
# ✅ 2단계에서 틀렸던 점 요약:
# 1. `if 0 <= x < 100 and 0 <= y < 100:` → (X)
#    - 좌표 최대값이 100이므로 101까지 포함해야 함 → `x < 101`, `y < 101` 로 수정
# 2. 드래곤 커브 확장 시 방향 회전을 잘못 처리한 예시 있음
#    → (현재는 `(dir + 1) % 4` 로 정확히 시계방향 구현)
# 3. 마지막 정사각형 검사에서 범위 `i`, `j`는 0~99까지만 순회해야 함 (i+1, j+1 접근)
#
# ✅ 핵심 구현 포인트:
# - 드래곤 커브 방향 리스트 역순 회전 시 `(dir + 1) % 4` 적용
# - 2차원 배열로 좌표 기록 및 정사각형 카운트 방식
# - 방향 배열 `dx`, `dy` 를 활용한 좌표 처리
# -------------------------------------------------------------
