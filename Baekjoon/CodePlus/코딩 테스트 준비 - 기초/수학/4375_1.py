# 백준 4375번: 1
# 문제 설명:
# 어떤 양의 정수 n이 주어질 때, 1로만 이루어진 n의 배수 중 가장 작은 수의 자릿수를 구하는 문제.
# 예를 들어, n=3이면 111이 가장 작은 배수이며, 자릿수는 3이다.

# 입력 형식:
# 여러 개의 테스트 케이스로 이루어져 있으며, 각 줄에 n이 주어진다. (1 ≤ n ≤ 10,000)

# 출력 형식:
# 1로만 이루어진 n의 배수 중 가장 작은 수의 자릿수를 출력한다.

# 예제 입력:
# 3
# 7
# 9901

# 예제 출력:
# 3
# 6
# 12


# 🛑 [❌ 사용자가 작성한 코드] (틀린 코드)
"""
while True:
    try:
        n = int(input())
        a = 1
        while a % n != 0:
            a = a * 10 + 1
        print(len(a) + 1)  # ❌ 오류 발생: len(a) 사용 불가능
    except:
        break
"""

# 📌 [❌ 사용자의 코드에서 틀린 점]
# 1. `a = a * 10 + 1`을 계속 사용하면, `a`의 크기가 너무 커져서 메모리 초과 발생 가능.
# 2. `len(a)`는 정수에서는 사용 불가능 (`TypeError` 발생).
#    - `len(str(a))` 또는 `count` 변수를 사용해야 함.


# ✅ [✔ 모범 답안: 최적화된 코드]
while True:
    try:
        n = int(input())  # 정수 입력 받기
        a = 1  # 1부터 시작
        count = 1  # 자릿수 추적

        while a % n != 0:
            a = (a * 10 + 1) % n  # 나머지만 저장하여 메모리 절약
            count += 1  # 자릿수 증가

        print(count)  # 최소 배수의 자릿수 출력

    except:
        break  # 입력이 없으면 종료
