# 백준 2609번: 최대공약수와 최소공배수
# 문제 설명:
# 두 개의 자연수 A와 B가 주어졌을 때, 최대공약수(GCD)와 최소공배수(LCM)를 구하는 문제.

# 입력 형식:
# 첫째 줄에 두 개의 자연수 A와 B가 주어진다. (1 ≤ A, B ≤ 10,000)

# 출력 형식:
# 첫째 줄에 A와 B의 최대공약수(GCD)를 출력.
# 둘째 줄에 A와 B의 최소공배수(LCM)를 출력.

# 예제 입력 1:
# 24 18
# 예제 출력 1:
# 6
# 72

# ✅ 모범 답안: 유클리드 알고리즘을 활용한 GCD/LCM 계산
# - 파이썬 내장 함수 사용 없이 직접 구현
# - 최대공약수(GCD) 계산: 유클리드 호제법
# - 최소공배수(LCM) 계산: (A * B) // GCD

# 입력 처리
a, b = map(int, input().split())

# 원래 A와 B의 곱 저장 (최소공배수 계산용)
m = a * b

# 최대공약수(GCD) 계산 (유클리드 호제법)
while a % b != 0:
    a, b = b, a % b

# 결과 출력
print(b)       # 최대공약수 출력
print(m // b)  # 최소공배수 출력
