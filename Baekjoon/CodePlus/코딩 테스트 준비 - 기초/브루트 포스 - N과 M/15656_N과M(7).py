# 백준 15656번: N과 M (7)
# 문제 설명:
# N개의 자연수가 주어지고, 이 중에서 길이가 M인 중복 순열을 출력하는 문제.
# - 같은 숫자를 여러 번 선택할 수 있으며, 순서가 다르면 다른 경우로 취급한다.
# - 입력받은 숫자들을 오름차순 정렬한 후 순열을 생성해야 한다.

# 입력 형식:
# - 첫 번째 줄에 두 정수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 7)
# - 두 번째 줄에 N개의 자연수가 주어진다. (서로 다른 정수, 1 ≤ 숫자 ≤ 10,000)

# 출력 형식:
# - 한 줄에 하나씩 길이가 M인 중복 순열을 출력한다.

# 예제 입력 1:
# 3 2
# 4 2 5
# 예제 출력 1:
# 2 2
# 2 4
# 2 5
# 4 2
# 4 4
# 4 5
# 5 2
# 5 4
# 5 5

import sys

# ✅ 입력 처리
N, M = map(int, sys.stdin.readline().split())
nums = list(map(int, sys.stdin.readline().split()))
nums.sort()  # 숫자들을 오름차순으로 정렬

# ✅ 현재 순열을 저장할 리스트
seq = []

# ✅ 백트래킹을 활용한 중복 순열 생성 함수
def backtrack():
    if len(seq) == M:  # 길이가 M이면 출력
        print(*seq)
        return
    
    for i in range(N):  # 주어진 숫자 중에서 선택 (중복 허용)
        seq.append(nums[i])  # 숫자 추가
        backtrack()  # 다시 같은 숫자를 선택할 수 있음
        seq.pop()  # 원상 복구 (백트래킹)

# ✅ 중복 순열 생성 실행
backtrack()

# -----------------------------------------------------
# ✅ 한 번에 정답!
