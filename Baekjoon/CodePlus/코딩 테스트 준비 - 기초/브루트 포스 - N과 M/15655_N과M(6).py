# 백준 15655번: N과 M (6)
# 문제 설명:
# N개의 자연수가 주어지고, 이 중에서 길이가 M인 오름차순 조합을 출력하는 문제.
# - 같은 숫자는 한 번만 선택할 수 있으며, 순서는 고려하지 않는다.
# - 입력받은 숫자들을 오름차순 정렬한 후 조합을 생성해야 한다.

# 입력 형식:
# - 첫 번째 줄에 두 정수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)
# - 두 번째 줄에 N개의 자연수가 주어진다. (서로 다른 정수, 1 ≤ 숫자 ≤ 10,000)

# 출력 형식:
# - 한 줄에 하나씩 길이가 M인 오름차순 조합을 출력한다.

# 예제 입력 1:
# 4 2
# 9 8 7 1
# 예제 출력 1:
# 1 7
# 1 8
# 1 9
# 7 8
# 7 9
# 8 9

import sys

# ✅ 입력 처리
N, M = map(int, sys.stdin.readline().split())
nums = list(map(int, sys.stdin.readline().split()))
nums.sort()  # 숫자들을 오름차순으로 정렬

# ✅ 현재 조합을 저장할 리스트
seq = []

# ✅ 백트래킹을 활용한 조합 생성 함수
def backtrack(start):
    if len(seq) == M:  # 길이가 M이면 출력
        print(*seq)
        return
    
    for i in range(start, N):  # 현재 숫자부터 N까지 탐색 (오름차순 유지)
        seq.append(nums[i])  # 숫자 추가
        backtrack(i + 1)  # 다음 숫자부터 탐색 (순서 유지)
        seq.pop()  # 원상 복구 (백트래킹)

# ✅ 조합 생성 실행
backtrack(0)

# -----------------------------------------------------
# ✅ 한 번에 정답!
