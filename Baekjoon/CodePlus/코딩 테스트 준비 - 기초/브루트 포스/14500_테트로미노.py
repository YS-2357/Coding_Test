# 백준 14500번: 테트로미노
# 문제 설명:
# N×M 크기의 종이에 테트로미노를 놓아 합이 가장 큰 값을 구하는 문제.
# - 테트로미노는 4개의 정사각형으로 이루어진 도형이며, 회전/대칭을 포함하여 19가지 모양이 존재.
# - 격자 내에서 테트로미노를 배치했을 때 가능한 최대 합을 찾아야 한다.

# 입력 형식:
# 첫째 줄에 종이의 크기 N, M이 주어진다. (4 ≤ N, M ≤ 500)
# 이후 N개의 줄에 M개의 정수가 주어지며, 각 값은 1 이상 1000 이하이다.

# 출력 형식:
# 테트로미노를 배치했을 때 만들 수 있는 최댓값을 출력한다.

# 예제 입력 1:
# 5 5
# 1 2 3 4 5
# 5 4 3 2 1
# 2 3 4 5 6
# 6 5 4 3 2
# 1 2 1 2 1

# 예제 출력 1:
# 19

import sys

# ✅ 입력 처리
n, m = map(int, sys.stdin.readline().split())
board = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]

# ✅ 테트로미노 19가지 모양을 좌표 리스트로 저장
tetromino = [
    # ㅁ (정사각형)
    [(0, 0), (0, 1), (1, 0), (1, 1)],
    
    # ㅡ, ㅣ (막대)
    [(0, 0), (0, 1), (0, 2), (0, 3)], [(0, 0), (1, 0), (2, 0), (3, 0)],

    # L자 모양
    [(0, 0), (0, 1), (0, 2), (1, 0)], [(1, 0), (1, 1), (1, 2), (0, 2)],
    [(0, 0), (1, 0), (1, 1), (1, 2)], [(0, 0), (0, 1), (0, 2), (1, 2)],
    [(0, 0), (1, 0), (2, 0), (2, 1)], [(2, 0), (2, 1), (1, 1), (0, 1)],
    [(0, 0), (0, 1), (1, 0), (2, 0)], [(0, 0), (0, 1), (1, 1), (2, 1)],

    # ㅜ, ㅗ, ㅏ, ㅓ (T자 모양)
    [(0, 0), (0, 1), (0, 2), (1, 1)], [(1, 0), (1, 1), (1, 2), (0, 1)],
    [(0, 0), (1, 0), (2, 0), (1, 1)], [(1, 0), (0, 1), (1, 1), (2, 1)],

    # Z, S (번개 모양)
    [(1, 0), (2, 0), (0, 1), (1, 1)], [(0, 0), (1, 0), (1, 1), (2, 1)],
    [(1, 0), (0, 1), (1, 1), (0, 2)], [(0, 0), (0, 1), (1, 1), (1, 2)]
]

# ✅ 최대 합을 저장하는 변수
answer = 0

# ✅ 테트로미노를 배치하면서 최댓값 찾는 함수
def find(x, y):
    global answer
    for shape in tetromino:
        result = 0
        for dx, dy in shape:
            try:
                # 테트로미노의 각 블록 위치 계산
                nx, ny = x + dx, y + dy
                result += board[nx][ny]
            except IndexError:
                # 범위를 벗어나면 해당 테트로미노는 무효
                result = 0
                break
        # 최댓값 갱신
        answer = max(answer, result)

# ✅ 완전 탐색 실행
def solve():
    for i in range(n):
        for j in range(m):
            find(i, j)

solve()
print(answer)


# -----------------------------------------------------
# ❌ 내가 쓴 코드와 틀린 점
# 1. 일부 테트로미노 모양이 누락됨 (특히 "ㅗ" 모양의 예외 처리 부족)
#    - 기존 코드에서는 "ㅗ" 모양을 별도로 처리하지 않았음
#    - ✅ 수정: "ㅗ" 모양을 포함한 모든 19가지 테트로미노를 리스트에 저장

# 2. 범위 벗어나는 경우 처리 방식 개선
#    - 기존: `if not (0 <= nx < N and 0 <= ny < M):` 사용하여 체크
#    - ✅ 수정: `try-except IndexError` 방식으로 간결하게 처리

# 3. `max_sum` 갱신 위치 오류
#    - 기존: `max_sum = max(max_sum, total)`이 반복문 내부에 위치하여 일부 잘못된 값이 반영될 가능성 있음
#    - ✅ 수정: `result`를 완전히 계산한 후 최댓값 갱신

# 4. 입력 최적화
#    - 기존: `array.append(list(map(int, sys.stdin.readline().split())))`
#    - ✅ 수정: `board = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]` 한 줄로 간결화

# ✅ 위 수정 후 실행하면 백준에서 정답 판정!
