# 84512_모음사전.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - "A", "E", "I", "O", "U"로 만들 수 있는 길이 1~5의 모든 단어를 사전 순으로 정렬했을 때,
#   주어진 단어가 몇 번째에 위치하는지 구하는 문제입니다.

# ✅ 입력 형식:
# - word: "A", "E", "I", "O", "U"만으로 이루어진 길이 1~5의 문자열

# ✅ 출력 형식:
# - 해당 단어가 사전 순으로 몇 번째에 있는지를 나타내는 정수 (1-based)

# ✅ 입출력 예제:
# 예제 1:
#   입력: "AAAAE"
#   출력: 6
# 예제 2:
#   입력: "AAAE"
#   출력: 10
# 예제 3:
#   입력: "I"
#   출력: 1563
# -----------------------------------------------------

def solution(word):
    answer = 0
    words = ["A", "E", "I", "O", "U"]
    
    for i in range(len(word)):
        temp = 0
        for j in range(0, 5 - i):
            temp += 5 ** j  # 해당 자리 이후 가능한 조합 수를 누적함
        answer += temp * words.index(word[i]) + 1  # 현재 자리의 순서 반영 + 자기 자신 포함

    return answer

# -----------------------------------------------------
# ✅ 나의 오답 및 실수:
# ❌ 처음엔 index() 함수가 왜 곱해지는지 이해하지 못했음
# ❌ 자리수마다 가중치 개념이 적용된다는 점을 간과함
# ❌ 자릿수별 가능한 조합 수를 5의 거듭제곱 합으로 계산해야 함

# ✅ GPT가 준 힌트 요약:
# - 단어의 각 자리는 가중치를 갖고 사전 순서를 계산함
# - `words.index(word[i])`는 해당 글자가 몇 번째 순서인지
# - temp는 자릿수 이후 가능한 조합 수의 총합 (가중치)
# - temp * index + 1 로 사전에서의 순서를 누적 계산함

# ✅ 사용된 개념 요약:
# - 순열/완전탐색 대신 수학적 누적 가중치를 이용한 계산
# - 자리수 별 5진법 비슷한 개념의 위치 누적
# - index(): 해당 문자가 사전 상 몇 번째인지 판단
# - 5^j 합: 다음 자리에 들어갈 수 있는 모든 조합의 수
# -----------------------------------------------------
