# 42842_카펫.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 갈색 타일(brown)은 테두리에, 노란색 타일(yellow)은 내부에 위치한 카펫이 있습니다.
# - 주어진 brown, yellow 개수에 맞는 카펫의 **[가로, 세로] 크기**를 구하는 문제입니다.
# - 가로(width) ≥ 세로(height) 조건을 만족해야 합니다.

# ✅ 입력 형식:
# - brown: 8 이상 5,000 이하
# - yellow: 1 이상 2,000 이하

# ✅ 출력 형식:
# - [가로, 세로] 형태의 정수 리스트

# ✅ 입출력 예제:
# 예제 1:
#   입력: brown = 10, yellow = 2
#   출력: [4, 3]

# 예제 2:
#   입력: brown = 24, yellow = 24
#   출력: [8, 6]

# -----------------------------------------------------

def solution(brown, yellow):
    # 전체 카펫 넓이는 brown + yellow
    total = brown + yellow
    
    # 세로 길이를 3 이상부터 하나씩 증가시키며 검사
    for height in range(3, total + 1):
        if total % height != 0:
            continue  # 전체 넓이로 나누어떨어지지 않으면 skip

        width = total // height
        
        if width < height:
            continue  # 가로 ≥ 세로 조건 위반 → skip
        
        # 내부 노란색 영역이 일치하는지 확인
        if (width - 2) * (height - 2) == yellow:
            return [width, height]

# -----------------------------------------------------
# ✅ 나의 오답 및 실수:
# ❌ 처음에 width와 height를 3부터 단순히 증가시키는 방향으로 고민했지만,
#    나누어떨어지는 쌍만 고려해야 함을 떠올리는 데 시간이 걸림

# ✅ GPT가 준 힌트 요약:
# - 전체 넓이는 brown + yellow
# - 조건식: `(width - 2) * (height - 2) == yellow`
# - `width ≥ height` 조건 추가
# - `total % height == 0`인 경우만 width 후보가 될 수 있음

# ✅ 사용된 개념 요약:
# - 약수 탐색: `(가로 * 세로 = 전체 넓이)`
# - 조건 기반 필터링
# - 반복문과 조건문을 활용한 시뮬레이션

# ✅ 결과:
# ✅ 한번에 정답을 맞춤은 아님 (탐색 방향 및 조건 정리에 힌트 필요)
# -----------------------------------------------------
