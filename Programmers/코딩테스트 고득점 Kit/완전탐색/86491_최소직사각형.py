# 86491_최소직사각형.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 명함을 회전시켜 지갑에 넣을 수 있다고 할 때,
#   모든 명함이 들어가는 지갑의 최소 크기를 구하는 문제입니다.

# ✅ 입력 형식:
# - sizes: 각 명함의 [가로, 세로] 크기를 담은 2차원 정수 배열
#   (1 ≤ w, h ≤ 1,000, 명함 개수는 1 이상 10,000 이하)

# ✅ 출력 형식:
# - 모든 명함을 수납할 수 있는 지갑의 최소 크기 (정수, 가로 × 세로)

# ✅ 입출력 예제:
# 예제 1:
#   입력: [[60, 50], [30, 70], [60, 30], [80, 40]]
#   출력: 4000
# 예제 2:
#   입력: [[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]]
#   출력: 120

# -----------------------------------------------------

def solution(sizes):
    answer = 0
    widths = []
    heights = []
    for w, h in sizes:
        if w >= h:
            widths.append(w)
            heights.append(h)
        else:
            widths.append(h)
            heights.append(w)
    answer = max(widths) * max(heights)
    return answer

# -----------------------------------------------------
# ✅ 나의 오답 및 실수:
# ❌ 없음

# ✅ GPT가 준 힌트 요약:
# - 사용하지 않음

# ✅ 사용된 개념 요약:
# - 각 명함을 회전시켜 한쪽을 항상 큰 값으로 고정
# - 가장 큰 가로, 세로를 기준으로 지갑 크기 계산

# ✅ 결과:
# ✅ 한번에 정답을 맞춤
# -----------------------------------------------------

# def solution(sizes):
#     return max(max(x) for x in sizes) * max(min(x) for x in sizes)
# -----------------------------------------------------
