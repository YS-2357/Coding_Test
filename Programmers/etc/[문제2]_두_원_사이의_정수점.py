# [문제2]_두_원_사이의_정수점.py
# -----------------------------------------------------
# ✅ 문제 설명:
# 중심이 원점인 반지름 r1, r2 (1 ≤ r1 < r2 ≤ 1,000,000) 두 원 사이(원 위 포함)에
# 존재하는 모든 정수 격자점 (x,y) 개수를 구한다.

# ✅ 입력 형식:
# - r1, r2: 정수 (1 ≤ r1 < r2 ≤ 1,000,000)

# ✅ 출력 형식:
# - 정수 격자점 개수 (정수)

# ✅ 입출력 예시(요약):
# - r1=2, r2=3 → 20

# ✅ 정답 코드(한 줄 주석):
from math import isqrt                      # 정수 제곱근(내림) 제공

def solution(r1, r2):
    r1_sq = r1 * r1                         # r1^2 (정수)
    r2_sq = r2 * r2                         # r2^2 (정수)

    def ceil_sqrt(t):                       # 정수 t에 대해 최소의 정수 y s.t. y^2 ≥ t
        if t <= 0:                          # t <= 0이면 최소 양의 y는 0 또는 1이 될 수 있음
            return 0                        # 여기서는 보조로 0 반환(축 제외 단계에서 1로 보정함)
        y = isqrt(t)                        # 바닥 제곱근
        return y if y * y == t else y + 1   # 정확히 제곱이면 그대로, 아니면 +1

    total = 0                               # 전체 격자점 개수 누적

    # 1) 사분면 내부(축 제외) 점을 x=1..r2 스캔으로 계산
    #    각 x에 대해 가능한 y의 [y_min..y_max]를 더한 뒤 ×4(대칭)한다.
    inner_sum = 0                           # 사분면 내부(축 제외) 누적
    for x in range(1, r2 + 1):              # x>0만 스캔(축 제외)
        # 바깥 원 경계까지 가능한 y 최댓값(내림): y_max^2 ≤ r2^2 - x^2
        y_max = isqrt(r2_sq - x * x)

        # 안쪽 원 바깥부터 가능한 y 최솟값(올림): y_min^2 ≥ max(r1^2 - x^2, 0)
        raw_min = ceil_sqrt(r1_sq - x * x)

        # 축(y=0) 제외 위한 보정: 최소 1부터 카운트
        y_min = max(1, raw_min)

        if y_max >= y_min:                  # 유효 구간이면 개수 누적
            inner_sum += (y_max - y_min + 1)

    total += inner_sum * 4                  # 네 사분면 대칭 반영(축 제외)

    # 2) 축 위의 점(원 위 포함) 별도 가산: 중복/누락 없이 안전하게 처리
    #    x축(y=0): r1 ≤ |x| ≤ r2 → 양/음 각각 (r2 - r1 + 1)개 → 합 2*(r2 - r1 + 1)
    #    y축(x=0): 동일 개수 → 합 2*(r2 - r1 + 1)
    #    축 전체: 4*(r2 - r1 + 1) (r1≥1이므로 원점(0,0)은 제외되어 일관)
    total += 4 * (r2 - r1 + 1)

    return total                            # 전체 정수 격자점 개수 반환

# -----------------------------------------------------
# 🔍 첫 시도 결과:
# - 한 번에 정답 도출 (힌트 사용 안 함)

# 📚 사용된 개념 요약:
# - x를 한 방향으로 훑으며 각 x에서 가능한 y의 정수 구간을 산술적으로 계산
# - 경계(원 위) 포함: y_max=floor_sqrt, y_min=ceil_sqrt로 엄밀 처리
# - 사분면 내부×4 + 축 점(중복 방지 위해 별도) = 전체
# - 정수 제곱근 isqrt 사용으로 부동소수 오차 회피
# - 시간복잡도 O(r2), 공간 O(1)
