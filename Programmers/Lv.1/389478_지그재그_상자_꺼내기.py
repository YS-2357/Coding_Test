# 389478_지그재그_상자_꺼내기.py
# -----------------------------------------------------
# ✅ 제목: 지그재그 적재 상자 꺼내기
# ✅ 문제 설명(요약):
# - 1부터 n까지 상자를 가로 w개씩 층을 쌓되, 층마다 방향이 번갈아가는(지그재그) 방식으로 적재한다.
# - 번호가 num인 상자를 꺼내려면, 같은 열 위에 놓인 상자들을 먼저 치워야 한다.
# - 자신을 포함해 치워야 하는 상자 개수를 구한다.
#
# ✅ 입력 형식(요지):
# - n: 총 상자 개수 (정수)
# - w: 가로 한 줄에 놓는 상자 수 (정수)
# - num: 꺼내려는 상자 번호 (1-base, 정수)
#
# ✅ 규칙 요약:
# - 층(layer) = (번호-1)//w
# - 같은 층 내 위치 pos = (번호-1)%w
# - 짝수층(0,2,4, …): 왼→오 적재, 홀수층(1,3,5, …): 오→왼 적재
# - ‘같은 열(column)’에 해당하는 인덱스를 올바르게 구해, 그 열에서 num의 위치부터 끝까지의 개수를 센다.
#
# ✅ 입출력 예시(문제 페이지의 예시 일부 참고)
# - (예시는 문제 페이지를 참조)
#
# ✅ 정답 코드(너의 풀이; 한 줄마다 주석):
def solution(n, w, num):
    answer = 0                                 # 최종 반환할 치워야 하는 상자 개수(자기 포함)
    boxes = [[] for _ in range(w)]             # 열(column)별 스택처럼 저장할 리스트들 준비
    # print(boxes)                             # (디버그) 초기 상태

    for i in range(n):                         # 0부터 n-1까지 각 상자 i를 적재
        if (i // w) % 2 == 0:                  # 현재 상자가 속한 층이 짝수층(왼→오)인 경우
            boxes[i % w].append(i+1)           #   열 = i%w, 해당 열 리스트에 번호 i+1을 추가
        else:                                  # 홀수층(오→왼)인 경우
            boxes[(w - i - 1) % w].append(i+1) #   반대 방향으로 매핑된 열에 i+1 추가
    # print(boxes)                             # (디버그) 적재 결과

    if ((num-1) // w) % 2 == 0:                # 꺼낼 상자 num이 속한 층이 짝수층이면
        want = (num-1) % w                     #   같은 층 내 위치 pos = (num-1)%w → 열 인덱스 그대로
    else:                                      # 홀수층이면(오→왼 적재)
        want = (w - ((num-1) % w) - 1)         #   열 인덱스는 w-1-pos로 뒤집힌 위치
    # print(boxes[want])                       # (디버그) 목표 열의 상자들

    index = boxes[want].index(num)             # 목표 열에서 num이 있는 인덱스 찾기
    answer = len(boxes[want][index:])          # 해당 위치부터 끝(맨 위)까지의 개수(자기 포함)

    return answer                              # 필요한 상자 수 반환

# -----------------------------------------------------
# 🔍 첫 시도 결과: 한 번에 정답 미도달 (여러 케이스에서 런타임 에러)
#
# 🔧 오답 및 실수(무엇을 틀렸는지):
# 1) 열 인덱스 계산의 오프바이원
#    - num은 1-base인데, 층/열 계산을 num//w, num%w로 처리해 엣지에서 잘못된 열이 산출됨.
# 2) 홀수층 열 공식 오류
#    - 홀수층에서 열은 w-1-pos여야 하는데, 이전 코드에서 w - (num % w) 등으로 계산해
#      인덱스 범위를 벗어나거나(예: num%w==0) 잘못된 열을 가리키는 경우 발생.
# 3) 그 결과, boxes[want].index(num)에서 값이 없다는 ValueError 혹은 인덱스 초과 발생.
#
# 🛠️ 어떻게 고쳤는지(수정 요약):
# - 좌표화 시 항상 (num-1)을 사용:
#   layer = (num-1)//w, pos = (num-1)%w
# - 짝수층: want = pos, 홀수층: want = w-1-pos로 정확히 열을 결정.
# - 위 수정으로 boxes[want]에 반드시 num이 존재하여 index 탐색 시 런타임 에러 해소.
#
# 📚 사용한 개념(최소):
# - 지그재그(serpentine) 적재의 좌표 변환(짝/홀 층에 따른 열 뒤집힘)
# - 1-base 번호를 0-base 좌표로 변환하는 오프바이원 처리
# - 열별 컨테이너 리스트에서 슬라이스로 개수 산출
