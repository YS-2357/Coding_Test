# 120864_숨어있는_숫자의_덧셈_1.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 영문자와 기타 문자가 섞인 문자열 my_string에서
#   연속된 숫자 뭉치를 하나의 자연수로 보고 합을 구하는 문제
#
# ✅ 입력:
# - my_string: 길이 1~100,000의 문자열 (숫자+문자 혼합)
#
# ✅ 출력:
# - 문자열에서 추출된 모든 자연수의 합 (정수)
# -----------------------------------------------------

def solution(my_string):
    answer = 0       # 최종 합계
    num_str = ""     # 현재 누적 중인 숫자 문자열

    # ✅ 문자열을 한 글자씩 순회
    for char in my_string:
        if char.isdigit():
            # 숫자 문자는 누적
            num_str += char
        else:
            # 숫자 연속 구간이 끝났다면 정수로 변환해 합산
            if num_str:
                answer += int(num_str)
                num_str = ""  # 누적 문자열 초기화

    # ✅ 마지막에 남은 숫자 구간 처리
    if num_str:
        answer += int(num_str)

    return answer  # 모든 숫자 구간의 합 반환

# -----------------------------------------------------
# ✅ 나의 오답 및 실수:
# ❌ 없음 — 한 번에 올바르게 구현함
#
# ✅ GPT가 준 힌트 요약:
# - char.isdigit()으로 숫자 여부 검사
# - 숫자가 연속되면 num_str에 누적, 문자가 나오면 num_str을 int 변환해 answer에 더하고 초기화
# - 반복 종료 후에도 남은 num_str이 있으면 한 번 더 합산
#
# ✅ 사용된 개념 요약:
# - 문자열 순회 및 조건 검사
# - str.isdigit() 메서드
# - 문자열 누적 및 int() 변환
# - 구간 누적 후 처리(flush) 패턴
#
# ✅ 시간 복잡도:
# - O(n), n = len(my_string) (최대 100,000) — 한 번 순회하며 각 연산은 O(1)
# -----------------------------------------------------
