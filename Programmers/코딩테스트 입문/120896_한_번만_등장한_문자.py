# 120896_한_번만_등장한_문자.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 문자열 s에서 **한 번만 등장한 문자들만** 추출하여 **오름차순 정렬된 문자열**을 반환
#
# ✅ 입력:
# - s: 문자열 (1 ≤ 길이 ≤ 100, 모두 소문자)
#
# ✅ 출력:
# - 한 번만 등장한 문자들을 오름차순 정렬한 문자열
#
# ✅ 예시:
#   입력: "abcabcadc"
#   출력: "d"
#
#   입력: "hello"
#   출력: "eho"
# -----------------------------------------------------

def solution(s):
    counts = {}  # 각 문자의 등장 횟수를 저장할 딕셔너리

    # ✅ 등장 횟수 카운팅
    for char in s:
        counts[char] = counts.get(char, 0) + 1

    once_chars = []  # 한 번만 등장한 문자 저장

    # ✅ 등장 횟수가 1인 문자만 추출
    for char, count in counts.items():
        if count == 1:
            once_chars.append(char)

    once_chars.sort()  # ✅ 오름차순 정렬
    return "".join(once_chars)  # ✅ 리스트를 문자열로 합쳐 반환

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - 딕셔너리로 문자 등장 횟수 카운팅
# - count == 1 조건으로 필터링
# - 리스트 정렬 + join으로 문자열 반환
#
# ✅ 시간 복잡도:
# - O(n): 문자 카운팅
# - O(k log k): 등장 문자 수 k에 대한 정렬
# - n ≤ 100 → 매우 빠름
#
# ✅ 나의 오답 및 실수:
# ❌ 없음 — 주어진 조건대로 정확하게 구현함
# -----------------------------------------------------
