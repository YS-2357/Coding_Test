# 12951_JadenCase_문자열_만들기.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 주어진 문자열을 JadenCase로 변환해야 한다.
# - 각 단어의 첫 글자는 대문자, 나머지 글자는 소문자로 만든다.
# - 숫자가 단어의 첫 글자라면 그대로 두며, 공백이 연속되는 경우에도 원래 형태 유지.

# ✅ 입력 형식:
# - s: 알파벳, 숫자, 공백으로 이루어진 문자열 (길이 1~200)

# ✅ 출력 형식:
# - JadenCase로 변환된 문자열

# ✅ 입출력 예제:
#   입력: "3people unFollowed me"
#   출력: "3people Unfollowed Me"
#   입력: "for the last week"
#   출력: "For The Last Week"
# -----------------------------------------------------

def solution(s):
    # 1. 공백을 기준으로 split하되, split(' ')로 처리해 연속 공백도 유지
    #    예: "hello  world" → ['hello', '', 'world']
    s = [ch.capitalize() for ch in s.split(' ')]
    #    각 단어에 대해 capitalize() 적용:
    #    - 첫 글자가 알파벳이면 대문자, 나머지는 소문자
    #    - 숫자가 첫 글자면 그대로 유지

    # 2. 리스트를 다시 문자열로 합칠 때, 원래 공백 유지 위해 ' '.join 사용
    answer = " ".join(s)

    # 3. 결과 반환
    return answer

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - str.split(' '): 공백을 기준으로 분리 (연속 공백도 빈 문자열로 유지)
# - str.capitalize():
#   - 첫 글자는 대문자, 나머지는 소문자로 변환
#   - 숫자는 영향 없음
# - ' '.join(list): 리스트 요소를 공백으로 연결 (원래 공백 유지)
# - 시간 복잡도: O(n) (문자열 길이에 비례)
# -----------------------------------------------------
