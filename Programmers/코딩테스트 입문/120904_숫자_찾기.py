# 120904_숫자_찾기.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 정수 num을 문자열처럼 보고, 그 안에서 숫자 k가 몇 번째 자리에 있는지 반환
# - 단, 위치는 **1부터 시작**하며, k가 없으면 -1을 반환
#
# ✅ 입력:
# - num: 정수 (0 ≤ num ≤ 1,000,000)
# - k: 정수 (0 ≤ k ≤ 9)
#
# ✅ 출력:
# - num에서 k가 **처음 등장하는 위치** (1부터 시작 인덱스)
# - 없으면 -1
#
# ✅ 예시:
#   입력: num = 29183, k = 1
#   출력: 3  → "29183"에서 "1"은 세 번째
#
#   입력: num = 123456, k = 7
#   출력: -1  → "7"이 없음
# -----------------------------------------------------

def solution(num, k):
    num_str = str(num)     # ✅ 정수 num을 문자열로 변환
    k_str = str(k)         # ✅ 정수 k도 문자열로 변환

    # ✅ 포함 여부 확인 후 위치 반환
    if k_str in num_str:
        return num_str.find(k_str) + 1  # 문자열 인덱스는 0부터 → 결과는 1부터
    else:
        return -1  # 포함되지 않으면 -1 반환

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - 정수 → 문자열 변환: str()
# - 문자열 포함 여부: `in` 연산자
# - 문자열 인덱스 찾기: str.find() → 존재하지 않으면 -1 반환
# - 인덱스는 0부터 시작하므로 +1 보정 필요
#
# ✅ 시간 복잡도:
# - O(d), d = num 자릿수 (최대 7자리) → 매우 빠름
#
# ✅ 나의 오답 및 실수:
# ❌ 없음 — 조건을 명확하게 파악하고 한 번에 정답 도출
# -----------------------------------------------------
