# 120852_소인수분해.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 정수 n을 소인수분해했을 때, **중복 없이** 오름차순으로 정렬된 **소인수 리스트**를 반환한다.
#
# ✅ 입력:
# - n: 정수 (10 ≤ n ≤ 100)
#
# ✅ 출력:
# - n의 소인수들을 담은 리스트 (중복 제거, 오름차순)
#
# ✅ 예시:
#   입력: n = 12
#   출력: [2, 3]
#
#   입력: n = 17
#   출력: [17]
# -----------------------------------------------------

def solution(n):
    answer = []  # 결과를 담을 리스트

    # ✅ 소수 판별 함수
    def is_prime(num):
        # 2부터 √num까지 나누어떨어지는지 검사
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                return False  # 약수가 있으면 소수 아님
        return True  # 나눠지는 수가 없으면 소수

    # ✅ 2부터 n까지 반복하며 소인수 판별
    for i in range(2, n + 1):
        if is_prime(i) and n % i == 0:  # 소수이고 n의 약수인 경우
            answer.append(i)

    return answer  # 오름차순으로 추가되므로 정렬 불필요

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - 소수 판별: √n까지 나누어떨어지는 수가 있는지 확인
# - 소인수 조건: n % i == 0 이면서 i가 소수
# - 중복 제거 불필요: 소인수는 한 번만 append
# - 정렬 필요 없음: 2부터 오름차순 순회로 자동 정렬됨
#
# ✅ 시간 복잡도:
# - O(n√n): n까지 반복, 각 수마다 소수 판별에 √n 시간
# - n ≤ 100이므로 성능 문제 없음
# -----------------------------------------------------
