# 120885_이진수_더하기.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 두 개의 2진수 문자열 bin1, bin2가 주어짐.
# - 이를 더한 값을 2진수 문자열 형태로 반환하는 문제.
#
# ✅ 입력 형식:
# - bin1, bin2: 1 이상 10,000 이하 길이의 2진수 문자열
# - bin1과 bin2는 '0' 또는 '1'로만 구성됨
#
# ✅ 출력 형식:
# - 두 이진수를 더한 결과를 2진수 문자열로 반환
#
# ✅ 입출력 예제:
# 예제 1:
#   입력: bin1 = "10", bin2 = "11"
#   출력: "101"
#
# 예제 2:
#   입력: bin1 = "1001", bin2 = "1111"
#   출력: "11000"
#
# -----------------------------------------------------
def solution(bin1, bin2):
    # int(bin1, 2): 2진수 문자열 bin1을 10진수 정수로 변환
    # int(bin2, 2): 2진수 문자열 bin2를 10진수 정수로 변환
    # 더한 뒤 bin()으로 2진수 문자열로 변환하면 '0b...' 형태가 나오므로
    # [2:]로 앞의 '0b'를 제거
    return bin(int(bin1, 2) + int(bin2, 2))[2:]

# -----------------------------------------------------
# 🛠 오답 및 실수 포인트:
# 1. 문자열을 그대로 zip해서 덧셈하면 자리수가 안 맞음 → 오른쪽부터 맞춰야 함.
# 2. 10진 자리 계산 방식(10**k)을 쓰면 2진 연산이 깨짐.
# 3. 수동 덧셈 구현 시 carry(올림) 처리를 반드시 해야 함.
#
# 💡 힌트 요약:
# - 파이썬은 int()로 진법 변환이 가능하니, bin1과 bin2를 int로 변환해 더한 뒤 bin()으로 다시 2진수로 바꾸는 게 가장 간단.
# - 다른 언어에서는 직접 캐리 연산을 구현해야 할 수도 있음.
#
# 📌 사용된 개념 요약:
# - 진법 변환: int(문자열, 진법)
# - 2진수 변환: bin(정수) → '0b...' 문자열
# - 문자열 슬라이싱: s[2:]로 접두어 제거
