# 120843_공_던지기.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 정수 리스트 numbers와 정수 k가 주어진다.
# - 첫 번째 사람이 공을 가지고 시작하여,
#   **한 사람 건너뛰고 오른쪽으로** 공을 던지는 방식.
# - k번째로 공을 받은 사람의 번호를 반환한다.
#
# ✅ 입력:
# - numbers: 사람 번호 리스트 (길이 3 이상 1000 이하, 길이는 홀수)
# - k: 정수 (1 이상 1000 이하)
#
# ✅ 출력:
# - k번째로 공을 받은 사람의 번호
#
# ✅ 예시:
#   입력: numbers = [1, 2, 3, 4], k = 2
#   출력: 3
#   (1 → 3 → 1 → ..., 두 번째로 받은 사람은 번호 3)
# -----------------------------------------------------

def solution(numbers, k):
    # ✅ 공이 이동하는 인덱스는 2칸씩 (한 명 건너)
    # k번째로 받는 사람의 위치는 (k - 1) * 2
    index = ((k - 1) * 2) % len(numbers)  # 원형 순환이므로 % 사용

    # ✅ 해당 인덱스의 사람 번호 반환
    return numbers[index]

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - 원형 순환: 리스트를 벗어나는 인덱스는 % 연산으로 처리
# - 공의 이동은 2칸씩 → index = 2 * (k - 1)
# - 리스트 인덱싱: numbers[index]
#
# ✅ 시간 복잡도:
# - O(1) (단순 계산과 인덱싱만 수행)
#
# ✅ 기타:
# - 디버깅용 print(index)는 최종 제출 시 제거해야 함
# -----------------------------------------------------
