# 181894_2의_영역.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 정수 배열 arr에서 값이 2인 구간만 추출.
# - 2가 **처음 등장하는 위치부터 마지막 등장하는 위치까지**의 부분 배열 반환.
# - 만약 2가 존재하지 않으면 `[-1]` 반환.
#
# ✅ 입력:
# - arr: 정수 배열 (길이 1 이상 100,000 이하, 원소는 0~9)
#
# ✅ 출력:
# - 조건에 맞는 부분 배열 또는 [-1]
#
# ✅ 예시:
#   입력: [1, 2, 1, 4, 5, 2, 9]
#   출력: [2, 1, 4, 5, 2]
#
#   입력: [1, 3, 4]
#   출력: [-1]
# -----------------------------------------------------

def solution(arr):
    answer = [-1]  # 2가 존재하지 않을 경우 기본값

    # ✅ arr에 2가 포함되어 있는 경우
    if 2 in arr:
        # ✅ 첫 번째 2의 인덱스
        start = arr.index(2)

        # ✅ 마지막 2의 인덱스: 뒤집은 배열에서 2의 위치를 찾아 역산
        end = len(arr) - 1 - arr[::-1].index(2)

        # ✅ 부분 배열 반환: [start, end] 구간 포함
        return arr[start:end+1]

    # ✅ 2가 없으면 [-1] 반환
    return answer

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - 리스트 인덱스 탐색:
#   - `index()`는 첫 번째 등장 위치 반환
#   - `arr[::-1].index(2)`는 뒤집힌 배열에서 찾은 인덱스를 이용해 마지막 등장 위치 계산
# - 슬라이싱: `arr[start:end+1]`
# - 조건 분기: `if 2 in arr`를 먼저 검사해 예외 처리
#
# ✅ 시간 복잡도:
# - `in`, `index()` 연산 각각 O(n), 전체 O(n) → 최대 10⁵ → 통과 가능
# -----------------------------------------------------
