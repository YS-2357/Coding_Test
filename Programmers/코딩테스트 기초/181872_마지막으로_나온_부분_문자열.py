# 181872_마지막으로_나온_부분_문자열.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 문자열 myString에서 문자열 pat이 **마지막으로 등장하는 위치까지의 부분 문자열**을 반환
# - 즉, myString의 **처음부터 pat이 마지막으로 등장하는 지점까지 자름**
#
# ✅ 입력:
# - myString: 문자열 (1 ≤ len ≤ 100)
# - pat: 부분 문자열 (1 ≤ len ≤ 10)
#
# ✅ 출력:
# - 부분 문자열: myString의 처음부터 마지막 pat의 끝까지
#
# ✅ 예시:
#   입력: myString = "AbCdEfG", pat = "dE"
#   출력: "AbCdE"
#   → pat은 인덱스 3에서 시작, 길이 2 → 0~4까지 슬라이싱
# -----------------------------------------------------

def solution(myString, pat):
    # ✅ pat이 마지막으로 등장하는 시작 인덱스 찾기
    last_index = myString.rfind(pat)

    # ✅ 마지막 등장 위치 + pat의 길이까지 슬라이싱
    return myString[:last_index + len(pat)]

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - rfind(): 문자열에서 가장 마지막으로 등장하는 인덱스를 반환
# - 슬라이싱: [:index] → index 직전까지, [:index + len(pat)] → pat 끝까지 포함
#
# ✅ 나의 오답 및 실수:
# ❌ 없음 — 문제 조건 명확히 이해하고 한 번에 통과
#
# ✅ 시간 복잡도:
# - rfind: O(n), 슬라이싱: O(k) → 전체 O(n)
# - 입력 크기 매우 작음 (최대 100) → 매우 빠름
# -----------------------------------------------------
