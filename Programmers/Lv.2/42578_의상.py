# 42578_의상.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - 서로 다른 종류의 의상을 조합해 하나 이상 착용할 수 있는 경우의 수를 구하는 문제
# - 같은 종류에서 여러 개를 동시에 입을 수 없으며, 최소 한 가지는 반드시 착용해야 함
#
# ✅ 입력:
# - clothes: [의상 이름, 의상 종류] 형태의 2차원 리스트 (1 ≤ 길이 ≤ 30)
#
# ✅ 출력:
# - 서로 다른 종류별로 한 벌씩 선택하거나 선택하지 않는 경우를 고려한 전체 조합 수에서
#   “아무것도 입지 않는 경우”를 뺀 값
#
# ✅ 예시:
#   입력:
#     [["yellow_hat", "headgear"],
#      ["blue_sunglasses", "eyewear"],
#      ["green_turban", "headgear"]]
#   계산:
#     headgear: 2개 → (2 + 1) 선택지
#     eyewear:   1개 → (1 + 1) 선택지
#     전체 조합: 3 × 2 = 6 → 아무것도 안 입는 경우 1 제외 → 5
#   출력: 5
# -----------------------------------------------------

def solution(clothes):
    from collections import Counter

    # ✅ 의상 종류별 개수 집계
    type_counts = Counter(kind for name, kind in clothes)

    # ✅ 곱셈 원리: 각 종류마다 (개수 + 1) 선택지 → 전체 조합 수
    total = 1
    for cnt in type_counts.values():
        total *= (cnt + 1)

    # ✅ 아무것도 입지 않는 경우(모두 ‘선택 안 함’) 1가지 제외
    return total - 1

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - Counter: 의상 종류별 빈도 집계
# - 곱셈 원리: 독립적인 선택지 수를 곱하여 전체 경우 수 계산
# - “선택 안 함” 옵션 추가 후 최종에서 1을 빼서 최소 한 가지 착용 보장
#
# ✅ 나의 오답 및 실수:
# ❌ 없음 — 한 번에 조건에 맞게 구현함
#
# ✅ 시간 복잡도:
# - O(n): clothes 길이 n (최대 30) 순회 및 곱셈
# - 매우 빠름
# -----------------------------------------------------
