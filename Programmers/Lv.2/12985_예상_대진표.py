# 12985_예상_대진표.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - N명의 참가자가 토너먼트에서 경기를 한다. (N은 2의 거듭제곱)
# - 참가자는 1번부터 N번까지 번호를 가짐.
# - 각 라운드마다 승자는 (현재 번호 + 1) // 2로 다음 라운드 번호를 부여받는다.
# - A번 참가자와 B번 참가자가 몇 번째 라운드에서 만나게 되는지 구하라.
#
# ✅ 입력 형식:
# - n: 참가자 수 (2 ≤ n ≤ 2¹⁰)
# - a, b: 두 참가자 번호
#
# ✅ 출력 형식:
# - 두 참가자가 만나는 라운드 번호 (정수)
#
# ✅ 입출력 예제:
#   입력: n = 8, a = 4, b = 7
#   출력: 3
#
# -----------------------------------------------------

def solution(n, a, b):
    answer = 0  # 몇 라운드째인지 기록

    # ✅ a와 b가 같아질 때까지 반복
    while a != b:
        # 각 참가자의 다음 라운드 번호 계산 (올림을 위해 +1 후 // 2)
        a = (a + 1) // 2
        b = (b + 1) // 2
        answer += 1  # 라운드 진행

    # 두 참가자가 같은 번호가 되면 만나게 된 것이므로 answer 반환
    return answer

# -----------------------------------------------------
# ✅ 나의 오답 및 실수:
# ❌ 처음에는 n을 줄여가면서 a와 b가 같은 절반에 있는지 확인하는 방식으로 접근했음.
# ❌ 하지만 이는 잘못된 접근. n의 크기는 중요하지 않고, 각 참가자의 다음 라운드 번호만 추적하면 됨.
#
# ✅ GPT가 준 힌트 요약:
# - 핵심은 a와 b가 같아질 때까지 반복하는 것.
# - 각 라운드에서 a, b 번호를 (번호 + 1) // 2로 업데이트.
# - n을 줄이는 방식이 아니라 a, b만 갱신하는 것이 정답.
#
# ✅ 사용된 개념 요약:
# - 반복문을 통한 시뮬레이션
# - 정수 나눗셈과 올림 연산 (// 연산자)
# - 조건 종료: 두 번호가 같아질 때
#
# ✅ 시간 복잡도:
# - O(log n) (라운드 수만큼 반복)
# -----------------------------------------------------
