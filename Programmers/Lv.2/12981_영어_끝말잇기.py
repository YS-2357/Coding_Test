# 12981_영어_끝말잇기.py
# -----------------------------------------------------
# ✅ 문제 설명:
# - n명의 사람들이 영어 끝말잇기를 한다.
# - 규칙 위반 조건:
#   1. 이전 단어의 마지막 글자로 시작하지 않으면 실패
#   2. 이전에 등장한 단어를 또 말하면 실패
# - 규칙 위반 시:
#   → 사람 번호, 몇 번째 턴인지 [번호, 턴] 반환
# - 규칙 위반 없으면 [0, 0] 반환
#
# ✅ 입력:
# - n: 사람 수 (2 ≤ n ≤ 10)
# - words: 단어 배열 (길이 2~100)
#
# ✅ 출력:
# - 규칙 위반한 사람 번호와 턴, 없으면 [0, 0]
#
# ✅ 예시:
#   입력: n=3, words=["tank","kick","know","wheel","land","dream","mother","robot","tank"]
#   출력: [3, 3]
# -----------------------------------------------------

def solution(n, words):
    answer = [0, 0]  # 규칙 위반 없을 경우 기본값

    # ✅ 중복 단어 확인
    if len(words) != len(set(words)):
        diff = {}  # 단어 등장 여부 기록
        for idx, word in enumerate(words):
            if word not in diff:
                diff[word] = 1  # 처음 등장
            else:
                # 중복 발생 → 사람 번호와 턴 계산
                return [n if (idx+1) % n == 0 else (idx+1) % n,
                        (idx+1) // n if (idx+1) % n == 0 else (idx+1) // n + 1]
    else:
        # ✅ 끝말잇기 규칙 확인
        for i in range(len(words) - 1):
            if words[i][-1] != words[i+1][0]:
                # 규칙 위반 시 사람 번호와 턴 계산
                return [n if (i+2) % n == 0 else (i+2) % n,
                        (i+2) // n if (i+2) % n == 0 else (i+2) // n + 1]

        return answer  # 위반 없으면 [0, 0] 반환

# -----------------------------------------------------
# ✅ 사용된 개념 요약:
# - **중복 검사**: dict 사용 (첫 등장 기록 후 중복 확인)
# - **문자열 비교**: 이전 단어의 마지막 문자 vs 다음 단어 첫 문자
# - **계산식**:
#   - 사람 번호 = (인덱스 + 1) % n (0이면 n)
#   - 턴 = (인덱스 + 1) // n (나머지 있으면 +1)
#
# ✅ 시간 복잡도:
# - O(m): m은 단어 개수 (최대 100) → 매우 빠름
# -----------------------------------------------------

# def solution(n, words):
#     # ✅ 규칙 위반이 없으면 반환할 기본값
#     answer = [0, 0]

#     # ✅ 단어 중복 체크용 set (빠른 검색 O(1))
#     used_words = set()

#     # ✅ 첫 번째 단어는 바로 추가
#     used_words.add(words[0])

#     # ✅ 단어 순회 (두 번째 단어부터 시작)
#     for i in range(1, len(words)):
#         prev_word = words[i - 1]  # 이전 단어
#         curr_word = words[i]      # 현재 단어

#         # ✅ 조건 1: 끝말잇기 규칙 위반 확인 (이전 단어 마지막 글자 != 현재 단어 첫 글자)
#         if prev_word[-1] != curr_word[0]:
#             # 규칙 위반 → 사람 번호와 턴 계산
#             return [(i % n) + 1, (i // n) + 1]

#         # ✅ 조건 2: 중복 단어 사용 여부 확인
#         if curr_word in used_words:
#             # 중복 발견 → 사람 번호와 턴 반환
#             return [(i % n) + 1, (i // n) + 1]

#         # ✅ 규칙 위반 없으면 현재 단어를 set에 추가
#         used_words.add(curr_word)

#     # ✅ 모든 단어가 규칙을 지켰으면 [0, 0] 반환
#     return answer
